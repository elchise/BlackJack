/*
Name : Ella Chi
Problem : Conditional Statements Case Study
Course: Comp Sci 1 (Mrs.Khan)
Date: October 28, 2020
 */

import java.util.Random;
import javax.swing.JOptionPane;

public class BlackJack extends javax.swing.JFrame {

    // Global Variables Section.............................
    int points =0;                      // track total points
    int playerTotal =0;                 // tracks player and dealer totals
    int dealerTotal =0;                 // for individual card values
    int playerCard1 =0;
    int playerCard2 =0;
    int playerCard3 =0;
    int playerCard4 =0;
    int playerCard5 =0;
    int dealerCard1 =0;
    int dealerCard2 =0;
    int dealerCard3 =0;
    int drawCount =0;                   // tracks number of cards drawn
    
    //Global Constants Section...............................
    final int BLACKJACK = 21;
    final int HIGHCARD  = 9;
    final int LOWCARD   = 1;
    final int BETAMOUNT = 20;
    final int OUTOFMONEY =0;
    final int STARTINGPOINTS =100;

    public BlackJack() {
        initComponents();
        setSize(550,375);
        btnHold.setEnabled(false);
        btnDraw.setEnabled(false);
        btnPlayAgain.setEnabled(true);
        drawCount=0;
        points = STARTINGPOINTS;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlayerCards = new javax.swing.JPanel();
        lblPlayer1 = new javax.swing.JLabel();
        lblPlayer2 = new javax.swing.JLabel();
        PlayerDraw = new javax.swing.JPanel();
        lblPlayer3 = new javax.swing.JLabel();
        lblPlayer4 = new javax.swing.JLabel();
        lblPlayer5 = new javax.swing.JLabel();
        DealerCard = new javax.swing.JPanel();
        lblDealer3 = new javax.swing.JLabel();
        lblDealer2 = new javax.swing.JLabel();
        lblDealer1 = new javax.swing.JLabel();
        btnDraw = new javax.swing.JButton();
        btnHold = new javax.swing.JButton();
        btnPlayAgain = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblPlayerPoints = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Black Jack");
        setForeground(new java.awt.Color(238, 238, 238));

        PlayerCards.setBorder(javax.swing.BorderFactory.createTitledBorder("Player's Cards:"));

        lblPlayer1.setBackground(new java.awt.Color(255, 255, 255));
        lblPlayer1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPlayer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblPlayer2.setBackground(new java.awt.Color(255, 255, 255));
        lblPlayer2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPlayer2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayer2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout PlayerCardsLayout = new javax.swing.GroupLayout(PlayerCards);
        PlayerCards.setLayout(PlayerCardsLayout);
        PlayerCardsLayout.setHorizontalGroup(
            PlayerCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerCardsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPlayer1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PlayerCardsLayout.setVerticalGroup(
            PlayerCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerCardsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayerCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPlayer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPlayer1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayerDraw.setBorder(javax.swing.BorderFactory.createTitledBorder("Player's Draw:"));
        PlayerDraw.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPlayer3.setBackground(new java.awt.Color(255, 255, 255));
        lblPlayer3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPlayer3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayer3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PlayerDraw.add(lblPlayer3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, 100));

        lblPlayer4.setBackground(new java.awt.Color(255, 255, 255));
        lblPlayer4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPlayer4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayer4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PlayerDraw.add(lblPlayer4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 70, 100));

        lblPlayer5.setBackground(new java.awt.Color(255, 255, 255));
        lblPlayer5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblPlayer5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlayer5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PlayerDraw.add(lblPlayer5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 70, 100));

        DealerCard.setBorder(javax.swing.BorderFactory.createTitledBorder("Dealer's Cards:"));

        lblDealer3.setBackground(new java.awt.Color(255, 255, 255));
        lblDealer3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblDealer3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDealer3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDealer2.setBackground(new java.awt.Color(255, 255, 255));
        lblDealer2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblDealer2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDealer2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblDealer1.setBackground(new java.awt.Color(255, 255, 255));
        lblDealer1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblDealer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDealer1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout DealerCardLayout = new javax.swing.GroupLayout(DealerCard);
        DealerCard.setLayout(DealerCardLayout);
        DealerCardLayout.setHorizontalGroup(
            DealerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DealerCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDealer1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDealer2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDealer3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DealerCardLayout.setVerticalGroup(
            DealerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DealerCardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DealerCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDealer3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDealer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDealer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnDraw.setText("Draw 1");
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });

        btnHold.setText("Hold");
        btnHold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoldActionPerformed(evt);
            }
        });

        btnPlayAgain.setText("Play Again");
        btnPlayAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayAgainActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        lblPlayerPoints.setText("Player Points:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PlayerCards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DealerCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PlayerDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnPlayAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnHold, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblPlayerPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PlayerCards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DealerCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHold)
                            .addComponent(btnDraw))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPlayerPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPlayAgain)
                            .addComponent(btnExit)))
                    .addComponent(PlayerDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
        drawCount = drawCount +1 ;                  //increment draw count
        if(drawCount ==1)
        {
            lblPlayer3.setVisible(true);
            playerTotal = playerTotal+playerCard3;  //create new player total
        }
        else if (drawCount ==2)
        {
            lblPlayer4.setVisible(true);
            playerTotal = playerTotal+playerCard4; 
        }
        else if (drawCount ==3)
        {
            lblPlayer5.setVisible(true);
            playerTotal = playerTotal+playerCard5;
            btnDraw.setEnabled(false);              // draws are over
            drawCount =0;                           // reset draws for next time
        }
        
        if(playerTotal > BLACKJACK)
        {
            JOptionPane.showMessageDialog(null,"You busted with " + playerTotal);
            points = points - BETAMOUNT;
            lblPlayerPoints.setText(" Player Points: "+ points); //loses the game and points total is over 21 
            if (points < OUTOFMONEY)
            {
                JOptionPane.showMessageDialog(null,"Sorry out of points - GAME OVER");
                System.exit(0);
            } //game ends
            lblDealer1.setText(""+dealerCard1); //dealer’s cards are revealed
            lblDealer2.setText(""+dealerCard2);
            lblDealer3.setText(""+dealerCard3);
            btnDraw.setEnabled(false);
            btnHold.setEnabled(false);
            btnPlayAgain.setEnabled(true);
            drawCount=0;
        }
    }//GEN-LAST:event_btnDrawActionPerformed

    private void btnHoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoldActionPerformed
        lblDealer1.setText(""+ dealerCard1); //dealer’s cards are revealed
        lblDealer2.setText(""+ dealerCard2);
        lblDealer3.setText(""+ dealerCard3);
        
		
        if(dealerTotal > BLACKJACK)//player wins if dealer’s total is greater than 21
        {
            JOptionPane.showMessageDialog(null,"You win, dealer busted! ");
            points = points + BETAMOUNT;
        }
        else if (playerTotal > dealerTotal) //player wins if total is greater than dealer’s but less than 21
        {
            JOptionPane.showMessageDialog(null,"You win, "+ playerTotal+" to "+ dealerTotal);
            points = points + BETAMOUNT;
        }
        else if (playerTotal < dealerTotal) //player loses if total is less than dealer’s
        {
            JOptionPane.showMessageDialog(null,"You lose, "+ playerTotal+" to "+ dealerTotal);
            points = points - BETAMOUNT;
        }
        else if (playerTotal == dealerTotal) //tie occurs when player and dealer’s totals are the same
        {
             JOptionPane.showMessageDialog(null,"Tie no points awarded");
        }
//player earns or loses 20 points when he wins or loses       

        lblPlayerPoints.setText("Player Points: "+points);
        if (points < OUTOFMONEY)
        {
            JOptionPane.showMessageDialog(null,"Sorry out of points - GAME OVER");
            System.exit(0);
        } //game ends if player has no points left
          
        btnDraw.setEnabled(false);
        btnHold.setEnabled(false);
        btnPlayAgain.setEnabled(true);
        drawCount=0; //resets draw count for next round

    }//GEN-LAST:event_btnHoldActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnPlayAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayAgainActionPerformed
        btnDraw.setEnabled(true);
        btnHold.setEnabled(true);
        lblPlayer3.setVisible(false); 		//hides all cards other than starting two 
        lblPlayer4.setVisible(false);
        lblPlayer5.setVisible(false);

        Random rnd = new Random(); 
        playerCard1= rnd.nextInt(10); 	//giving each of the player's card a new, random value with a maximum of 9
        playerCard2= rnd.nextInt(10);
        playerCard3= rnd.nextInt(10);
        playerCard4= rnd.nextInt(10);
        playerCard5= rnd.nextInt(10);
        lblPlayer1.setText(""+playerCard1);
        lblPlayer2.setText(""+playerCard2);
        lblPlayer3.setText(""+playerCard3);
        lblPlayer4.setText(""+playerCard4);
        lblPlayer5.setText(""+playerCard5);

        dealerCard1= rnd.nextInt(10); //gives each of the dealer's cards a new value
        dealerCard2= rnd.nextInt(10);
        dealerCard3= rnd.nextInt(10);
        lblDealer1.setText(""); //hides dealer's cards
        lblDealer2.setText("");
        lblDealer3.setText("");
        dealerTotal = dealerCard1 + dealerCard2 + dealerCard3; //resets dealer total
        playerTotal = playerCard1 + playerCard2; //resets player total to two revealed cards
        btnPlayAgain.setEnabled(false); 

    }//GEN-LAST:event_btnPlayAgainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlackJack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlackJack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DealerCard;
    private javax.swing.JPanel PlayerCards;
    private javax.swing.JPanel PlayerDraw;
    private javax.swing.JButton btnDraw;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHold;
    private javax.swing.JButton btnPlayAgain;
    private javax.swing.JLabel lblDealer1;
    private javax.swing.JLabel lblDealer2;
    private javax.swing.JLabel lblDealer3;
    private javax.swing.JLabel lblPlayer1;
    private javax.swing.JLabel lblPlayer2;
    private javax.swing.JLabel lblPlayer3;
    private javax.swing.JLabel lblPlayer4;
    private javax.swing.JLabel lblPlayer5;
    private javax.swing.JLabel lblPlayerPoints;
    // End of variables declaration//GEN-END:variables
}
